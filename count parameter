locals {
    lmda-TriggerFlattenSfn = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-EDL-${var.terraform_aws_environment}-Lmda-TriggerFlattenSfn"
    lmda-SnowflakeProcessTrigger = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-EDL-${var.terraform_aws_environment}-Lmda-SnowflakeProcessTrigger"
    lmda-S3TriggerSfn = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-EDL-${var.terraform_aws_environment}-Lmda-S3TriggerSfn"
    lmda-S3TriggerETLOrchestrator = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-EDL-${var.terraform_aws_environment}-Lmda-S3TriggerETLOrchestrator"
    lmda-TriggerRestoreGlacier = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-EDL-${var.terraform_aws_environment}-Lmda-TriggerRestoreGlacier"
    lmda-BulkViewRecreate = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-EDL-${var.terraform_aws_environment}-Lmda-BulkViewRecreate"
    lmda-AdHocUserJob = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-EDL-${var.terraform_aws_environment}-Lmda-AdHocUserJob"
    lmda-SupportProcessor = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-EDL-${var.terraform_aws_environment}-Lmda-SupportProcessor"
    sqs-sqsBufferKafkaS3Events = "arn:aws:sqs:${var.region}:${var.terraform_aws_accountnumber}:${var.terraform_aws_environment}-sqsBufferKafkaS3Events"
    sqs-sqsCfxPostProcessor = "arn:aws:sqs:${var.region}:${var.terraform_aws_accountnumber}:${var.terraform_aws_environment}-sqsCfxPostProcessor"
    Lmda-DXAPCDGPParserLambda = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-DXAPCD-${var.terraform_aws_environment}-Lmda-DXAPCDGPParserLambda"
    Lmda-DxInboundFileWatcher = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-DXNA-${var.terraform_aws_environment}-Lmda-DxInboundFileWatcher"
    Lmda-DxScrubOutFileWatcher = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-DXNA-${var.terraform_aws_environment}-Lmda-DxScrubOutFileWatcher"
    Lmda-HIPBSAInsert = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-DXNA-${var.terraform_aws_environment}-Lmda-HIPBSAInsert"
    Lmda-HIPSFinsert = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-DXNA-${var.terraform_aws_environment}-Lmda-HIPSFinsert"
    Lmda-HIPDelta = "arn:aws:lambda:${var.region}:${var.terraform_aws_accountnumber}:function:CRLN-DXNA-${var.terraform_aws_environment}-Lmda-HIPDelta"
    

    s3_buckets_for_dataz-nogbd-phi = {
        dev= "crln-aedl-sf-dev-dataz-nogbd-phi-useast2"
        sit = "crln-aedl-sf-sit-dataz-nogbd-phi-useast2"
        uat = "crln-aedl-sf-uat-dataz-nogbd-phi-useast1"
        preprod = "crln-aedl-sf-preprod-dataz-nogbd-phi-useast1"
        prod = "crln-aedl-sf-prod-dataz-nogbd-phi-useast1"
        dr = "crln-aedl-sf-dr-dataz-nogbd-phi-useast2"
        ir = "crln-aedl-sf-ir-dataz-nogbd-phi-useast1"
      }

    s3_buckets_for_sf-dev-dataz = {
        dev = "crln-aedl-sf-dev-dataz-gbd-phi-useast2"
        sit = "crln-aedl-sf-sit-dataz-gbd-phi-useast2"
        uat = "crln-aedl-sf-uat-dataz-gbd-phi-useast1"
        preprod = "crln-aedl-sf-preprod-dataz-gbd-phi-useast1"
        prod = "crln-aedl-sf-prod-dataz-gbd-phi-useast1"
        dr = "crln-aedl-sf-dr-dataz-gbd-phi-useast2"
        ir = "crln-aedl-sf-ir-dataz-gbd-phi-useast1"
    }
}


module "terraform_aws_s3_bucket_notification_1" {

  # depends_on = [
  #   module.terraform_aws_lambda_permission_26, module.terraform_aws_lambda_permission_27, module.terraform_aws_lambda_permission_28, module.terraform_aws_lambda_permission_34, module.terraform_aws_lambda_permission_36, module.terraform_aws_lambda_permission_53, module.terraform_aws_lambda_permission_54
  # ]

  source  = "cps-terraform.anthem.com/CORP/terraform-aws-s3-bucket-notification/aws"
  version = "0.0.2"
  bucket  = format("%s",lower("${var.terraform_aws_company}-${var.terraform_aws_accountnumber}-ssm-${var.terraform_aws_environment}-filetransfer"))
  lambda_function = [
    {
      "lambda_function_arn" : local.lmda-S3TriggerSfn
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "inbound/"
      "filter_suffix" : ".hist.json"
    },
    {
      "lambda_function_arn" : local.lmda-S3TriggerSfn
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "inbound/"
      "filter_suffix" : ".incr.json"
    },
    {
      "lambda_function_arn" : local.lmda-TriggerFlattenSfn
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "inbound/"
      "filter_suffix" : ".flat.json"
    },
    {
      "lambda_function_arn" : local.lmda-S3TriggerETLOrchestrator
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "trgfiles/"
      "filter_suffix" : ".trg.json"
    },
    {
      "lambda_function_arn" : local.lmda-TriggerRestoreGlacier
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "retrieveFromGlacier/"
      "filter_suffix" : ".csv"
    },
    {
      "lambda_function_arn" : local.lmda-BulkViewRecreate
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "recreateViews/"
      "filter_suffix" : ".csv"
    },
    {
      "lambda_function_arn" : local.lmda-AdHocUserJob
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "userData/"
      "filter_suffix" : ".start"
    },
    {
      "lambda_function_arn" : local.lmda-SupportProcessor
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "supporttrg/"
      "filter_suffix" : ".trg.json"
      
    },
    {
      "lambda_function_arn" : local.Lmda-DXAPCDGPParserLambda
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "srcfiles/dxapcd/"
      "filter_suffix" : ""
      
    },
    {
      "lambda_function_arn" : local.Lmda-DxInboundFileWatcher
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "srcfiles/dxna/Inbound/"
      "filter_suffix" : ".txt"
      
    },
    {
      "lambda_function_arn" : local.Lmda-HIPSFinsert
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "HIP/HIP_insert_input/"
      "filter_suffix" : ".yaml"
      
    },
    
    {
      "lambda_function_arn" : local.Lmda-DxScrubOutFileWatcher
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "srcfiles/dxna/cpsui/"
      "filter_suffix" : ".txt"
      
    },
    {
      "lambda_function_arn" : local.Lmda-HIPBSAInsert
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "HIP/HIP_BSA_INSERT/"
      "filter_suffix" : ".yaml"
      
    },
    {
      "lambda_function_arn" : local.Lmda-HIPDelta
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "srcfiles/hip/inbound/delta_inboundfile/"
      "filter_suffix" : ""
      
    }
    
  ]
  queue = [
    {
      id = ""
      queue_arn     = local.sqs-sqsBufferKafkaS3Events
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ".avro"
      filter_prefix = "stream/"
    },
    {
      queue_arn     = local.sqs-sqsBufferKafkaS3Events
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ".json"
      filter_prefix = "stream/"
    },
    {
      queue_arn     = local.sqs-sqsCfxPostProcessor
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ".trl"
      filter_prefix = "srcfiles/withtrlfile/"
    },
    {
      queue_arn     = local.sqs-sqsCfxPostProcessor
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ""
      filter_prefix = "srcfiles/WithoutTrlFile/"
    },
    {
      queue_arn     = local.sqs-sqsCfxPostProcessor
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ".ctl"
      filter_prefix = "srcfiles/withtrlfile/"
    },
    {
      queue_arn     = local.sqs-sqsCfxPostProcessor
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ""
      filter_prefix = "srcfiles/withouttrlfile/"
    },
    {
      queue_arn     = local.sqs-sqsCfxPostProcessor
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ".trg"
      filter_prefix = "srcfiles/withtrlfile/"
    },
    {
      queue_arn     = local.sqs-sqsCfxPostProcessor
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ".trl"
      filter_prefix = "srcfiles/WithTrlFile/"
    }
  ]
}

# module "terraform_aws_s3_bucket_notification_2" {

#   # depends_on = [
#   #   module.terraform_aws_lambda_permission_Lmda-SnowflakeProcessTrigger
#   # ]
  
#   source  = "cps-terraform.anthem.com/CORP/terraform-aws-s3-bucket-notification/aws"
#   version = "0.0.2"
#   bucket  = "${lookup(local.s3_buckets_for_dataz-nogbd-phi,"${var.terraform_aws_environment}")}"
#   lambda_function = [
#     {
#       "lambda_function_arn" : local.lmda-SnowflakeProcessTrigger
#       "events" : ["s3:ObjectCreated:*"]
#       "filter_prefix" : "outbound/"
#       "filter_suffix" : ".incr.json"
#     }
#   ]
# }

# module "terraform_aws_s3_bucket_notification_3" {

#   # depends_on = [
#   #   module.terraform_aws_lambda_permission_55
#   # ]

#   source  = "cps-terraform.anthem.com/CORP/terraform-aws-s3-bucket-notification/aws"
#   version = "0.0.2"
#   bucket  = "${lookup(local.s3_buckets_for_sf-dev-dataz,"${var.terraform_aws_environment}")}"
#   lambda_function = [
#     {
#       "lambda_function_arn" : local.lmda-SnowflakeProcessTrigger
#       "events" : ["s3:ObjectCreated:*"]
#       "filter_prefix" : "outbound/"
#       "filter_suffix" : ".incr.json"
#     }
#   ]
# }

module "terraform_aws_s3_bucket_notification_4" {

  # depends_on = [
  #   module.terraform_aws_lambda_permission_59, module.terraform_aws_lambda_permission_60, module.terraform_aws_lambda_permission_61, module.terraform_aws_lambda_permission_62, module.terraform_aws_lambda_permission_63, module.terraform_aws_lambda_permission_64, module.terraform_aws_lambda_permission_65
  # ]

  source  = "cps-terraform.anthem.com/CORP/terraform-aws-s3-bucket-notification/aws"
  version = "0.0.2"
  bucket  = format("%s",lower("${var.terraform_aws_company}-${var.terraform_aws_accountnumber}-ssm-${var.terraform_aws_environment}-nogbd-filetransfer"))
  lambda_function = [
    {
      "lambda_function_arn" : local.lmda-S3TriggerSfn
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "inbound/"
      "filter_suffix" : ".hist.json"
    },
    {
      "lambda_function_arn" : local.lmda-S3TriggerSfn
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "inbound/"
      "filter_suffix" : ".incr.json"
    },
    {
      "lambda_function_arn" : local.lmda-TriggerFlattenSfn
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "inbound/"
      "filter_suffix" : ".flat.json"
    },
    {
      "lambda_function_arn" : local.lmda-S3TriggerETLOrchestrator
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "trgfiles/"
      "filter_suffix" : ".trg.json"
    },
    {
      "lambda_function_arn" : local.lmda-TriggerRestoreGlacier
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "retrieveFromGlacier/"
      "filter_suffix" : ".csv"
    },
    {
      "lambda_function_arn" : local.lmda-BulkViewRecreate
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "recreateViews/"
      "filter_suffix" : ".csv"
    },
    {
      "lambda_function_arn" : local.lmda-AdHocUserJob
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "userData/"
      "filter_suffix" : ".start"
    },
    {
      "lambda_function_arn" : local.lmda-SupportProcessor
      "events" : ["s3:ObjectCreated:*"]
      "filter_prefix" : "supporttrg/"
      "filter_suffix" : ".trg.json"
      
    }
  ]
  queue = [
    {
      id = ""
      queue_arn     = local.sqs-sqsBufferKafkaS3Events
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ".avro"
      filter_prefix = "stream/"
    },
    {
      queue_arn     = local.sqs-sqsBufferKafkaS3Events
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ".json"
      filter_prefix = "stream/"
    },
    {
      queue_arn     = local.sqs-sqsCfxPostProcessor
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ".trl"
      filter_prefix = "srcfiles/withtrlfile/"
    },
    {
      queue_arn     = local.sqs-sqsCfxPostProcessor
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ""
      filter_prefix = "srcfiles/WithoutTrlFile/"
    },
    {
      queue_arn     = local.sqs-sqsCfxPostProcessor
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ".ctl"
      filter_prefix = "srcfiles/withtrlfile/"
    },
    {
      queue_arn     = local.sqs-sqsCfxPostProcessor
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ""
      filter_prefix = "srcfiles/withouttrlfile/"
    },
    {
      queue_arn     = local.sqs-sqsCfxPostProcessor
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ".trg"
      filter_prefix = "srcfiles/withtrlfile/"
    },
    {
      queue_arn     = local.sqs-sqsCfxPostProcessor
      events        = ["s3:ObjectCreated:*"]
      filter_suffix = ".trl"
      filter_prefix = "srcfiles/WithTrlFile/"
    }
  ]
}

module "terraform_aws_lambda_permission_dxapcd_1" {
  source  = "cps-terraform.anthem.com/CORP/terraform-aws-lambda-permission/aws"
  version = "0.0.3"
  action                   = "lambda:InvokeFunction"
  create_lambda_permission = true
  event_source_token       = null
  function_name            = "CRLN-DXAPCD-${var.terraform_aws_environment}-Lmda-DXAPCDGPParserLambda"
  principal                = "s3.amazonaws.com"
  qualifier                = null
  source_account           = var.terraform_aws_accountnumber
  source_arn               = format("%s",lower("arn:aws:s3:::${var.terraform_aws_company}-${var.terraform_aws_accountnumber}-ssm-${var.terraform_aws_environment}-filetransfer"))
  statement_id             = "AllowExecutionFromS3ForLambda3"
  statement_id_prefix      = null
}



module "terraform_aws_lambda_permission_dxna_1" {
  source  = "cps-terraform.anthem.com/CORP/terraform-aws-lambda-permission/aws"
  version = "0.0.3"
  action                   = "lambda:InvokeFunction"
  create_lambda_permission = true
  event_source_token       = null
  function_name            = "CRLN-DXNA-${var.terraform_aws_environment}-Lmda-DxInboundFileWatcher"
  principal                = "s3.amazonaws.com"
  qualifier                = null
  source_account           = var.terraform_aws_accountnumber
  source_arn               = format("%s",lower("arn:aws:s3:::${var.terraform_aws_company}-${var.terraform_aws_accountnumber}-ssm-${var.terraform_aws_environment}-filetransfer"))
  statement_id             = "AllowExecutionFromS3ForLambda3"
  statement_id_prefix      = null
}


module "terraform_aws_lambda_permission_dxna_2" {
  source  = "cps-terraform.anthem.com/CORP/terraform-aws-lambda-permission/aws"
  version = "0.0.3"
  action                   = "lambda:InvokeFunction"
  create_lambda_permission = true
  event_source_token       = null
  function_name            = "CRLN-DXNA-${var.terraform_aws_environment}-Lmda-DxScrubOutFileWatcher"
  principal                = "s3.amazonaws.com"
  qualifier                = null
  source_account           = var.terraform_aws_accountnumber
  source_arn               = format("%s",lower("arn:aws:s3:::${var.terraform_aws_company}-${var.terraform_aws_accountnumber}-ssm-${var.terraform_aws_environment}-filetransfer"))
  statement_id             = "AllowExecutionFromS3ForLambda3"
  statement_id_prefix      = null
}


module "terraform_aws_lambda_permission_dxna_3" {
  source  = "cps-terraform.anthem.com/CORP/terraform-aws-lambda-permission/aws"
  version = "0.0.3"
  action                   = "lambda:InvokeFunction"
  create_lambda_permission = true
  event_source_token       = null
  function_name            = "CRLN-DXNA-${var.terraform_aws_environment}-Lmda-HIPBSAInsert"
  principal                = "s3.amazonaws.com"
  qualifier                = null
  source_account           = var.terraform_aws_accountnumber
  source_arn               = format("%s",lower("arn:aws:s3:::${var.terraform_aws_company}-${var.terraform_aws_accountnumber}-ssm-${var.terraform_aws_environment}-filetransfer"))
  statement_id             = "AllowExecutionFromS3ForLambda3"
  statement_id_prefix      = null
}

module "terraform_aws_lambda_permission_dxna_4" {
  source  = "cps-terraform.anthem.com/CORP/terraform-aws-lambda-permission/aws"
  version = "0.0.3"
  action                   = "lambda:InvokeFunction"
  create_lambda_permission = true
  event_source_token       = null
  function_name            = "CRLN-DXNA-${var.terraform_aws_environment}-Lmda-HIPSFinsert"
  principal                = "s3.amazonaws.com"
  qualifier                = null
  source_account           = var.terraform_aws_accountnumber
  source_arn               = format("%s",lower("arn:aws:s3:::${var.terraform_aws_company}-${var.terraform_aws_accountnumber}-ssm-${var.terraform_aws_environment}-filetransfer"))
  statement_id             = "AllowExecutionFromS3ForLambda3"
  statement_id_prefix      = null
}

module "terraform_aws_lambda_permission_dxna_5" {
  source  = "cps-terraform.anthem.com/CORP/terraform-aws-lambda-permission/aws"
  version = "0.0.3"
  action                   = "lambda:InvokeFunction"
  create_lambda_permission = true
  event_source_token       = null
  function_name            = "CRLN-DXNA-${var.terraform_aws_environment}-Lmda-HIPDelta"
  principal                = "s3.amazonaws.com"
  qualifier                = null
  source_account           = var.terraform_aws_accountnumber
  source_arn               = format("%s",lower("arn:aws:s3:::${var.terraform_aws_company}-${var.terraform_aws_accountnumber}-ssm-${var.terraform_aws_environment}-filetransfer"))
  statement_id             = "AllowExecutionFromS3ForLambda3"
  statement_id_prefix      = null
}
